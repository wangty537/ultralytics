# Ultralytics YOLO11n with small object detection enhancements
# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolo11n.yaml' will call yolo11.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [1, 0.125, 1024] 
  s: [1, 0.25, 1024]
  m: [1, 0.5, 1024] 
  l: [1, 1, 1024] 
  x: [1, 2, 1024]

# Backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [32, 3, 1]]  # 0-P1/2
  - [-1, 1, Conv, [64, 3, 2]]  # 1-P2/4
  - [-1, 1, C3, [64]]          # 2
  - [-1, 1, Conv, [128, 3, 2]] # 3-P3/8
  - [-1, 2, C3, [128]]         # 4
  - [-1, 1, Conv, [256, 3, 2]] # 5-P4/16
  - [-1, 3, C3, [256]]         # 6
  - [-1, 1, Conv, [512, 3, 2]] # 7-P5/32
  - [-1, 1, C3, [512]]         # 8
  - [-1, 1, SPPF, [512, 5]]    # 9

# Head
head:
  # Upsample and merge P5 -> P4
  - [-1, 1, Conv, [256, 1, 1]]                    # 10
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]    # 11
  - [[-1, 6], 1, Concat, [1]]                     # 12
  - [-1, 1, C3, [256, False]]                     # 13
  
  # Upsample and merge P4 -> P3
  - [-1, 1, Conv, [128, 1, 1]]                    # 14
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]    # 15
  - [[-1, 4], 1, Concat, [1]]                     # 16
  - [-1, 1, C3, [128, False]]                     # 17
  - [-1, 1, CBAM, [128]]                          # 18
  
  # Upsample and merge P3 -> P2
  - [-1, 1, Conv, [64, 1, 1]]                     # 19
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]    # 20
  - [[-1, 2], 1, Concat, [1]]                     # 21
  - [-1, 1, C3, [64, False]]                      # 22
  - [-1, 1, CBAM, [64]]                           # 23
  
  # Downsample path P2 -> P3
  - [-1, 1, Conv, [64, 3, 2]]                    # 24
  - [[-1, 18], 1, Concat, [1]]                   # 25
  - [-1, 1, C3, [128]]                            # 26
  
  # Downsample path P3 -> P4
  - [-1, 1, Conv, [128, 3, 2]]                   # 27
  - [[-1, 13], 1, Concat, [1]]                   # 28
  - [-1, 1, C3, [256]]                            # 29
  
  # Downsample path P4 -> P5
  - [-1, 1, Conv, [256, 3, 2]]                   # 30
  - [[-1, 9], 1, Concat, [1]]                    # 31
  - [-1, 1, C3, [512]]                           # 32
  
  # Detection heads
  - [[23, 26, 29, 32], 1, Detect, [nc]]  # Detect(P2, P3, P4, P5)


# 关键改进说明：
# 四层检测头 (P2-P5)：

# 新增P2/4高分辨率输出层专门检测小目标

# 完整的特征金字塔结构实现多尺度特征融合

# 双向特征金字塔：

# 上采样路径：P5→P4→P3→P2

# 下采样路径：P2→P3→P4→P5

# 实现高低层特征的充分融合

# 注意力机制：

# 在P2和P3层添加CBAM模块（通道+空间注意力）

# 帮助网络聚焦小目标关键特征

# 增强的特征提取：

# 使用C3模块代替普通卷积

# 添加SPPF空间金字塔池化

# 增加特征复用和感受野

# 结构优化：

# 调整通道数保持轻量化

# 使用nearest上采样保持特征完整性

# 残差连接避免梯度消失

# 使用建议：
# 输入分辨率建议至少640x640

# 训练时启用马赛克数据增强

# 针对小目标调整anchor sizes

# 可配合小目标专用数据增强策略

# 此配置在保持模型轻量化的同时，显著提升了小目标检测能力，适合无人机图像、卫星图像等小目标密集的场景。