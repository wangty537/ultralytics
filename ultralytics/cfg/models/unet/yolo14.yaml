# Ultralytics ðŸš€ AGPL-3.0 License - https://ultralytics.com/license

# Ultralytics YOLO11 object detection model with P3/8 - P5/32 outputs
# Model docs: https://docs.ultralytics.com/models/yolo11
# Task docs: https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolo11n.yaml' will call yolo11.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [1, 0.125, 1024] # summary: 181 layers, 2624080 parameters, 2624064 gradients, 6.6 GFLOPs
  s: [1, 0.25, 1024] # summary: 181 layers, 9458752 parameters, 9458736 gradients, 21.7 GFLOPs
  m: [1, 0.5, 1024] # summary: 231 layers, 20114688 parameters, 20114672 gradients, 68.5 GFLOPs
  l: [1, 1, 1024] # summary: 357 layers, 25372160 parameters, 25372144 gradients, 87.6 GFLOPs
  x: [1, 2, 1024] # summary: 357 layers, 56966176 parameters, 56966160 gradients, 196.0 GFLOPs

# YOLO11n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv3x3_rep, [64, 3, 1]] # 0-
  - [-1, 1, Conv, [64, 3, 2]] # 1-P2
  - [-1, 1, Conv3x3_rep, [128, 3, 1]] # 2
  - [-1, 1, Conv, [128, 3, 2]] # 3-P4
  - [-1, 1, Conv3x3_rep, [256, 3, 1]] # 4
  - [-1, 1, Conv, [256, 3, 2]] # 5-P8
  - [-1, 1, Conv3x3_rep, [512, 3, 1]] # 6
  - [-1, 1, Conv, [512, 3, 2]] # 7-P16
  - [-1, 1, Conv3x3_rep, [1024, 3, 1]] # 8
  - [-1, 1, Conv, [1024, 3, 2]] # 9-p32
  - [-1, 1, Conv3x3_rep, [1024, 3, 1]] # 10

# YOLO11n head
head:
  - [-1, 1, nn.Upsample, [None, 2, "bilinear"]] # 11-p16
  - [-1, 1, Conv3x3_rep, [512, 3, 1]]                  # 12
  - [[-1, 7], 1, Concat, [1]]                   # 13
  - [-1, 1, Conv3x3_rep, [512, 3, 1]]                  # 14
  - [-1, 1, Conv3x3_rep, [512, 3, 1]]                  # 15

  - [-1, 1, nn.Upsample, [None, 2, "bilinear"]] # 16-p8
  - [-1, 1, Conv3x3_rep, [256, 3, 1]]                  
  - [[-1, 5], 1, Concat, [1]]                   
  - [-1, 1, Conv3x3_rep, [256, 3, 1]]                  
  - [-1, 1, Conv3x3_rep, [256, 3, 1]]                  # 20

  - [-1, 1, nn.Upsample, [None, 2, "bilinear"]] # 21-p4
  - [-1, 1, Conv3x3_rep, [256, 3, 1]]                  
  - [[-1, 3], 1, Concat, [1]]                   
  - [-1, 1, Conv3x3_rep, [256, 3, 1]]                  
  - [-1, 1, Conv3x3_rep, [256, 3, 1]]                  # 25

  # - [-1, 1, nn.Upsample, [None, 2, "bilinear"]] # 26-p2
  # - [-1, 1, Conv, [256, 3, 1]]                  
  # - [[-1, 4], 1, Concat, [1]]                   
  # - [-1, 1, Conv, [256, 3, 1]]                  
  # - [-1, 1, Conv, [256, 3, 1]]                  # 30

  - [[15, 20, 25], 1, Detect, [nc]] # Detect(P3, P4, P5)
  
